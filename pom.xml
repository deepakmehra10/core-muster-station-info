<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.3.RELEASE</version>
    <relativePath/>
  </parent>

  <groupId>com.rccl.core</groupId>
  <artifactId>core-muster-station-info</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>

    <lombok>1.18.4</lombok>
    <maven.checkstyle.plugin.version>3.0.0</maven.checkstyle.plugin.version>
    <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.docker.plugin.version>0.24.0</maven.docker.plugin.version>
    <maven.jacoco.plugin.version>0.8.0</maven.jacoco.plugin.version>
    <maven.javadoc.plugin.version>3.0.1</maven.javadoc.plugin.version>
    <maven.spotbugs.plugin.version>3.1.3</maven.spotbugs.plugin.version>
    <maven.sonar.plugin.version>3.3.0.603</maven.sonar.plugin.version>
    <middleware.commons-all.version>1.3.1</middleware.commons-all.version>

  </properties>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-couchbase-reactive</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.rccl.middleware.commons</groupId>
      <artifactId>commons-all</artifactId>
      <version>${middleware.commons-all.version}</version>
    </dependency>


  </dependencies>

  <distributionManagement>

    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>microservices-nexus</id>
      <name>Microservices Snapshot Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-snapshot</url>
    </snapshotRepository>

    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>microservices-nexus</id>
      <name>Microservices Release Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-release</url>
    </repository>

  </distributionManagement>

  <repositories>

    <repository>
      <id>microservices-release</id>
      <name>Microservices Release Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-release</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>

    <repository>
      <id>microservices-snapshot</id>
      <name>Microservices Snapshot Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-snapshot</url>
      <releases>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>

  </repositories>


  <build>
    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
          <failOnViolation>true</failOnViolation>
          <violationSeverity>warning</violationSeverity>
          <includeTestSourceDirectory>false</includeTestSourceDirectory>
          <sourceDirectories>${project.basedir}/src/main/java</sourceDirectories>
          <testSourceDirectories>${project.basedir}/src/test/java</testSourceDirectories>
          <outputFile>${project.basedir}/target/checkstyle-output.xml</outputFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${maven.spotbugs.plugin.version}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/findbugs</outputDirectory>
          <xmlOutput>true</xmlOutput>
          <xmlOutputDirectory>target/findbugs</xmlOutputDirectory>
          <threshold>Low</threshold>
          <effort>Max</effort>
          <failOnError>true</failOnError>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${maven.sonar.plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jacoco.plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*CoreMusterStationInfoApplication.*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${maven.docker.plugin.version}</version>
        <configuration>
          <skip>false</skip>
          <logStdout>true</logStdout>
          <useColor>true</useColor>
          <images>
            <image>
              <name>${project.artifactId}</name>
              <build>
                <dockerFile>Dockerfile</dockerFile>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <descriptor>docker-bundle.xml</descriptor>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>container-build</id>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <show>private</show>
          <nohelp>true</nohelp>
        </configuration>
      </plugin>

    </plugins>


  </build>

</project>